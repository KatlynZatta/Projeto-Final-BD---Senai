CREATE DATABASE NUTRIBABY

USE NUTRIBABY

-
-- TABELA USUARIO
CREATE TABLE USUARIO (
    CPF_USUARIO VARCHAR(20) NOT NULL PRIMARY KEY,     
    NOME VARCHAR(50) NOT NULL,                         
    SOBRENOME VARCHAR(100) NOT NULL,                     
    TELEFONE VARCHAR(20) NOT NULL,                     
    EMAIL VARCHAR(50) NOT NULL,                         
    CEP VARCHAR(12) NOT NULL,                           
    RUA VARCHAR(100) NOT NULL, 
    CIDADE VARCHAR(50) NOT NULL,                        
    ESTADO VARCHAR(20) NOT NULL,
	NUMERO VARCHAR(10) NOT NULL 
);


-- TABELA PERFIL_CRIANCA
CREATE TABLE PERFIL_CRIANCA (
    ID_PERFIL_CRIANCA INT PRIMARY KEY,                
    NOME_CRIANCA VARCHAR(100) NOT NULL,                                            
    RESTRICOES VARCHAR(100) NOT NULL,                    
    OBSERVACOES VARCHAR(100) NOT NULL,                   
    CPF_USUARIO VARCHAR(20) NOT NULL,
	IDADE VARCHAR(10) NOT NULL    
);
ALTER TABLE PERFIL_CRIANCA 
DROP COLUMN NOME

ALTER TABLE PERFIL_CRIANCA ADD NOME_CRIANCA VARCHAR(100);

-- Define a chave estrangeira para PERFIL_CRIANCA
ALTER TABLE PERFIL_CRIANCA
ADD CONSTRAINT FK_PERFIL_CRIANCA_USUARIO FOREIGN KEY (CPF_USUARIO)
REFERENCES USUARIO(CPF_USUARIO);

-- TABELA ENTREGADOR
CREATE TABLE ENTREGADOR (
    CPF_ENTREGADOR VARCHAR(20) PRIMARY KEY,            
    NOME VARCHAR(20),                                 
    SOBRENOME VARCHAR(50),                             
    SALARIO DECIMAL(10,2)                              
);

-- TABELA PEDIDOVENDA
CREATE TABLE PEDIDOVENDA (
    ID_PEDIDO INT PRIMARY KEY NOT NULL,                
    DATA DATE NOT NULL,                                
    QTD_PRODUTOS INT NOT NULL,                         
    STATUS_VENDA VARCHAR(100) NOT NULL,                
    CPF_USUARIO VARCHAR(20) NOT NULL,                 
    CPF_ENTREGADOR VARCHAR(20) NOT NULL                
);

-- Define as chaves estrangeiras para PEDIDOVENDA
ALTER TABLE PEDIDOVENDA
ADD CONSTRAINT FK_PEDIDOVENDA_USUARIO FOREIGN KEY (CPF_USUARIO)
REFERENCES USUARIO(CPF_USUARIO);

ALTER TABLE PEDIDOVENDA
ADD CONSTRAINT FK_PEDIDOVENDA_ENTREGADOR FOREIGN KEY (CPF_ENTREGADOR)
REFERENCES ENTREGADOR(CPF_ENTREGADOR);

-- TABELA TIPO_PRODUTO
CREATE TABLE TIPO_PRODUTO (
    COD_TIPO_PROD INTEGER PRIMARY KEY,                 
    NOME_TIPO_PROD VARCHAR(100)                        
);


-- TABELA PRODUTO
CREATE TABLE PRODUTO (
    ID_PRODUTO INT PRIMARY KEY,                        
    COD_TIPO_PROD INT,                                 
    DESCRICAO VARCHAR(100),                           
    NOME VARCHAR(100)                                  
);

-- Define a chave estrangeira para PRODUTO
ALTER TABLE PRODUTO
ADD CONSTRAINT FK_PRODUTO_TIPO_PRODUTO FOREIGN KEY (COD_TIPO_PROD)
REFERENCES TIPO_PRODUTO(COD_TIPO_PROD);

-- TABELA PROMOCAO
CREATE TABLE PROMOCAO (
    COD_PROMOCAO INTEGER PRIMARY KEY,                  
    NOME_CAMPANHA VARCHAR(100),                       
    PORCENT_DESCONTO DECIMAL(5,2),                     
    ID_PRODUTO INTEGER,                                
    OBSERVACAO VARCHAR(255)                            
);

-- Define a chave estrangeira para PROMOCAO
ALTER TABLE PROMOCAO
ADD CONSTRAINT FK_PROMOCAO_PRODUTO FOREIGN KEY (ID_PRODUTO)
REFERENCES PRODUTO(ID_PRODUTO);


-- TABELA PEDIDOPRODUTO_INCLUI
CREATE TABLE PEDIDOPRODUTO_INCLUI (
    ID_PEDIDO INT,                                    
    ID_PRODUTO INT,                                   
    QUANTIDADE INT,                                    
    PRIMARY KEY (ID_PEDIDO, ID_PRODUTO)                
);

-- Define as chaves estrangeiras para PEDIDOPRODUTO_INCLUI
ALTER TABLE PEDIDOPRODUTO_INCLUI
ADD CONSTRAINT FK_PEDIDOPRODUTO_PEDIDOVENDA FOREIGN KEY (ID_PEDIDO)
REFERENCES PEDIDOVENDA(ID_PEDIDO);

ALTER TABLE PEDIDOPRODUTO_INCLUI
ADD CONSTRAINT FK_PEDIDOPRODUTO_PRODUTO FOREIGN KEY (ID_PRODUTO)
REFERENCES PRODUTO(ID_PRODUTO);



-- TABELA FORNECEDOR
CREATE TABLE FORNECEDOR (
    CNPJ INT PRIMARY KEY,                              
    TELEFONE VARCHAR(20) NOT NULL,                     
    NOME_FANTASIA VARCHAR(100) NOT NULL,               
    RAZAO_SOCIAL VARCHAR(100) NOT NULL,                
    ENDERECO VARCHAR(100) NOT NULL,                    
    TELEFONE_2 VARCHAR(20),                            
    EMAIL VARCHAR(100) NOT NULL,                       
    CIDADE VARCHAR(100) NOT NULL,                      
    ESTADO VARCHAR(50) NOT NULL,                       
    BAIRRO VARCHAR(100) NOT NULL,                      
    CEP VARCHAR(10) NOT NULL,                         
    RUA VARCHAR(100) NOT NULL,                         
    NUMERO VARCHAR(10)                                 
);

-- TABELA PEDIDO_COMPRA
CREATE TABLE PEDIDO_COMPRA (
    NUM_PEDIDO_FORNECEDOR INT PRIMARY KEY,             
    DATA_PEDIDO DATE,                                  
    CNPJ INT,                                          
    STATUS VARCHAR(50)                                 
);

-- CRIA ALTERAÇÃO - PEDIDO_COMPRA (CNPJ SE TORNA NOT NULL):
ALTER TABLE PEDIDO_COMPRA
ALTER COLUMN CNPJ INT NOT NULL

-- CRIAR FOREIGN KEY - CNPJ:
ALTER TABLE PEDIDO_COMPRA
ADD CONSTRAINT FK_FORNECEDOR_CNPJ FOREIGN KEY (CNPJ) REFERENCES FORNECEDOR(CNPJ);

-- TABELA PRODUTO_PEDIDOCOMPRA
CREATE TABLE PRODUTO_PEDIDOCOMPRA (
    ID_PRODUTO_PEDIDO INT PRIMARY KEY,                
    DATA_COMPRA_FORNECEDOR DATE,                       
    QUANTIDADE INT,                                    
    NUM_PEDIDO_FORNECEDOR INT                          
);

-- CRIAR FOREIGN KEY - NUM_PEDIDO_FORNECEDOR:

ALTER TABLE PRODUTO_PEDIDOCOMPRA
ADD CONSTRAINT FK_NUM_PEDIDO_FORNECEDOR FOREIGN KEY (NUM_PEDIDO_FORNECEDOR) REFERENCES PEDIDO_COMPRA(NUM_PEDIDO_FORNECEDOR);


-----------------------------------REGISTRA USUARIO--------------------------------
SELECT 
	*
FROM
	dbo.USUARIO

INSERT INTO USUARIO (CPF_USUARIO, NOME, SOBRENOME, TELEFONE, EMAIL, CEP, RUA, CIDADE, ESTADO, NUMERO)
VALUES (999999999-12, 'André', 'Matos', '1199999-9999', 'andre.matos@gmail.com', '9999-999', 'Rua dos Dados', 'São Paulo', 'SP', '123')


-----------------------------------REGISTRA PERFIL CRIANÇA COM O USUARIO ANTERIOR--------------------------------
SELECT 
	*
FROM
	dbo.PERFIL_CRIANCA

INSERT INTO PERFIL_CRIANCA ( ID_PERFIL_CRIANCA, NOME_CRIANCA, RESTRICOES, OBSERVACOES, CPF_USUARIO, IDADE)
VALUES ( 1, 'Marcos', 'Alérgica', 'Não pode ter gluten', '999999987', '9')

---------------------------- DESAFIO FINAL PARA ENTREGA -------------------------------------
-- VIEW 01
CREATE VIEW VW_USUARIO_E_PERFIL_CRIANCA AS
SELECT
	USUARIO.NOME,
	USUARIO.CPF_USUARIO,
	USUARIO.EMAIL,
	USUARIO.TELEFONE,
	PERFIL_CRIANCA.ID_PERFIL_CRIANCA,
	PERFIL_CRIANCA.NOME_CRIANCA,
	PERFIL_CRIANCA.CPF_USUARIO
FROM
	USUARIO
JOIN PERFIL_CRIANCA ON USUARIO.CPF_USUARIO = PERFIL_CRIANCA.CPF_USUARIO

-- CHECAGEM DA VIEW 01
SELECT 
	*
FROM
	VW_USUARIO_E_PERFIL_CRIANCA

--------------------------------------------------------------------------

-- VIEW 02
CREATE VIEW vw_PRODUTO_COM_PEDIDO_E_VENDA_INCLUSOS AS
SELECT
	PRODUTO.ID_PRODUTO,
	PRODUTO.NOME,
	PRODUTO.DESCRICAO,
	PEDIDOPRODUTO_INCLUI.ID_PEDIDO,
	PEDIDOPRODUTO_INCLUI.QUANTIDADE,
	PEDIDOVENDA.DATA,
	PEDIDOVENDA.STATUS_VENDA,
	PEDIDOVENDA.QTD_PRODUTOS
FROM
	PRODUTO
JOIN PEDIDOPRODUTO_INCLUI ON PRODUTO.ID_PRODUTO = PEDIDOPRODUTO_INCLUI.ID_PRODUTO
JOIN PEDIDOVENDA ON PEDIDOPRODUTO_INCLUI.ID_PRODUTO = PEDIDOVENDA.ID_PEDIDO

-- CHECAGEM DA VIEW 02
SELECT 
	*
FROM
	vw_PRODUTO_COM_PEDIDO_E_VENDA_INCLUSOS


-- VIEW 03

CREATE VIEW vw_PRODUTOS_COMPRADOS_DOS_FORNECEDORES AS
SELECT
	FORNECEDOR.CNPJ,
	FORNECEDOR.NOME_FANTASIA,
	FORNECEDOR.EMAIL,
	FORNECEDOR.TELEFONE,
	PEDIDO_COMPRA.DATA_PEDIDO,
	PEDIDO_COMPRA.STATUS,
	PRODUTO_PEDIDOCOMPRA.DATA_COMPRA_FORNECEDOR,
	PRODUTO_PEDIDOCOMPRA.QUANTIDADE
FROM
	FORNECEDOR
JOIN PEDIDO_COMPRA ON FORNECEDOR.CNPJ = PEDIDO_COMPRA.CNPJ
JOIN PRODUTO_PEDIDOCOMPRA ON PEDIDO_COMPRA.NUM_PEDIDO_FORNECEDOR = PRODUTO_PEDIDOCOMPRA.NUM_PEDIDO_FORNECEDOR

SELECT 
	*
FROM
	vw_PRODUTOS_COMPRADOS_DOS_FORNECEDORES